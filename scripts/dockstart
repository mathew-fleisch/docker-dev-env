#!/bin/bash

container_name=docker-dev-env
if [[ -z "$GIT_TOKEN" ]]; then
  latest_version=$(curl -s "https://api.github.com/repos/mathew-fleisch/docker-dev-env/tags" \
    | grep name \
    | sed -e 's/.*\ \"v\(.*\)\",.*$/v\1/g' \
    | head -1)
else
    latest_version=$(curl -s -H "Authorization: token $GIT_TOKEN" "https://api.github.com/repos/mathew-fleisch/docker-dev-env/tags" \
    | grep name \
    | sed -e 's/.*\ \"v\(.*\)\",.*$/v\1/g' \
    | head -1)
fi
if [[ -z $(docker images | grep $container_name | awk '{print $2}' | grep $latest_version) ]]; then
  read -p "Download latest version $latest_version and remove current? " REPLY
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "Downloading latest version: $latest_version"
    dockstop
    docker images | grep $container_name | awk '{print $3}' | xargs -I {} docker rmi -f {}
  else
      current_version=$(docker images | grep $container_name | awk '{print $2}' | sort -Vr | head -1)
      if [[ -n $current_version ]]; then
        echo "Skipping latest version for existing version: $current_version"
        latest_version=$current_version
      else
        echo "No current version found, exiting"
        exit 1
      fi
  fi
fi

container_id=$(docker ps -aqf "name=$container_name")
if [[ -z "$container_id" ]]; then
  container_id=$(docker run -dit --rm \
    -v /Users/$USER/.kube:/root/.kube \
    -v /Users/$USER/.ssh:/root/.ssh \
    -v /Users/$USER/.aliases:/root/.bash_aliases \
    -v /Users/$USER/src:/root/src \
    --name $container_name \
    mathewfleisch/docker-dev-env:$latest_version)
fi
docker exec -it $container_id bash
